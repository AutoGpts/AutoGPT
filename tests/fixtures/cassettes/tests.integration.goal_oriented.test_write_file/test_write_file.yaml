interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\nThe OS you are running on is:
      macOS-12.6\n\nGOALS:\n\n1. Use the write_to_file command to write ''Hello World''
      into a file named \"hello_world.txt\".\n2. Use the task_complete command to
      complete the task.\n3. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, br
      Connection:
      - keep-alive
      Content-Length:
      - '3448'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        MdwQACB+b06793Ka99suyiHQvXRaopBiT2xtBX7WBGjqJkiCCWYU6RgbA9r2iwOKwkCfoCjQrPPn
        KMREszltMXFyqy1c5Vb5LjrDFtDIKyO5r102fradYnJ6OFZP/DMVxn1aH8uf+8cfT/xlDYW4/s+5
        fOW2rhaMbAxQcFd+My6gu6PJYDAcdjt9BR8LdtAoa8n6rWEm22Yds06/04XCNpmSoc+om+hrWUp8
        5ZCgx+OBQh59LV/b23QnA4UOAGiPJ9Ph5KrgUX+UoP+dcUnjLegzmugYGiYlm8QEgUIEu70a51kg
        IppBqrgtK0kzaJrK5st8kBk0zfBCgbkgibRNXBjkgX1jhZcSlxvrmPLovXN+LlLo7TM7F6nChewt
        ZYYaGXqdLRjPBb2t2Lm47CEArSUHeduaQelHMnGtbShBaH7jESiyJi1UIGVjcxI+yJyrkKIJ1qL1
        M6KMeJA2sSGpbCIx6RVUUzsT8Pwhox8HIcwbKza3yZ95oSKGt0KJmUw4kk1py4n2VirsorUzQXXr
        r8pQQx181YzycK7WTGbgBpldfDCecSCkI1g0TUlM2R6rjXUshoQFX7L9EDKj/6UillDLWoDrLFxx
        VYhQaC95yACNJLGGQgsK2tCd6/x6YwAD
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c981fcc9c4896f5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - br
      Content-Type:
      - application/json
      Date:
      - Fri, 19 May 2023 00:11:58 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-38re46gevxtz9n69wynp7uzp
      openai-processing-ms:
      - '15440'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86500'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.333s
      x-request-id:
      - 1f20c35c3cef61bbcec06046877ae152
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\nI
      was created.\n\"\"\"\n\nLatest Development:\n\"\"\"\nNothing new happened.\n\"\"\"\n"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, br
      Connection:
      - keep-alive
      Content-Length:
      - '599'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        ISAFACBGzpU/ozqrU6LIJ1YEJUxKpJMDxyzCIHjUFoYxRRYFEmBuY+cYRdBWc2hDFoIiSL0+qHgp
        2jeZMvqRGa3nr/rqrk/pS/lyF3hTot6fgYD5eRT0XSxRCyBjNQjkypdFIahqOYZhmqqmElQsjEpQ
        JLwXdckU+6H1majoigqCofOSCHQDb1nF+7+eFVHdgboaQcAqXo4PpUIQ/59AoyrqQSCnDx3o1waG
        xhfohpaVESi8rsu63qt7ENjXOYpbYfI6YeuYDrGtWZ9mdSLU0SSkXiecXyQcBJZt6e891gMoup5x
        EGTy16DK8XOcDAM=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c98203caeff96f5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - br
      Content-Type:
      - application/json
      Date:
      - Fri, 19 May 2023 00:12:02 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-38re46gevxtz9n69wynp7uzp
      openai-processing-ms:
      - '1189'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '89866'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 88ms
      x-request-id:
      - 572e593ccc4249960b19b9ff18f441b1
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\nThe OS you are running on is:
      macOS-12.6\n\nGOALS:\n\n1. Use the write_to_file command to write ''Hello World''
      into a file named \"hello_world.txt\".\n2. Use the task_complete command to
      complete the task.\n3. Do not use any other commands.\n\n\nConstraints:\n1.
      ~4000 word limit for short term memory. Your short term memory is short, so
      immediately save important information to files.\n2. If you are unsure how you
      previously did something or want to recall past events, thinking about similar
      events will help you remember.\n3. No user assistance\n4. Exclusively use the
      commands listed in double quotes e.g. \"command name\"\n\nCommands:\n1. append_to_file:
      Append to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n2.
      delete_file: Delete file, args: \"filename\": \"<filename>\"\n3. list_files:
      List Files in Directory, args: \"directory\": \"<directory>\"\n4. read_file:
      Read file, args: \"filename\": \"<filename>\"\n5. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks: Get text summary, args:
      \"url\": \"<url>\"\n8. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n9. list_agents: List GPT Agents, args: () -> str\n10.
      message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11.
      start_agent: Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created and nothing new
      has happened."}, {"role": "user", "content": "Determine which next command to
      use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"Since I need to write a specific text into a file, the write_to_file command
      is the most appropriate for this task.\",\n        \"plan\": \"- Use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"criticism\":
      \"I don''t see any issues with this plan.\",\n        \"speak\": \"I will use
      the write_to_file command to write ''Hello World'' into a file named ''hello_world.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"hello_world.txt\",\n            \"text\": \"Hello World\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate, br
      Connection:
      - keep-alive
      Content-Length:
      - '4617'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        MYARACC+2cy/53LSvOR3s6349kvp2wxowaGYQSKdiZvdRZxgbmvSWJiuYWNyPBZgFkmCYV6UBvxK
        b2vOa6k9S3yIMXnhpFv4FBZJ7jSpmjJavvGjy/i8PMbubVy/+PD+9/xV83Q6nenTL69gEOJzTnQU
        N1haEPGhhkG48otxCjterGaz+Xw8mRhUIeUSFlmj0XQwj7Rr4xCNpqMxDDpxGcPeomlD1eheQ8G1
        wI5Hk7lBEqoJMg8Xq6lBCQAy3bHJaNUbxNSPCOz/WyzT+Ar2Fm0oGRZOxIu6WmHAYXfU4nZTExFt
        oHnoslxlA0snejznK93A0gafwiXRCLfeUub7GUa7rQdvuCwDpbIgPaAtoG46OvqSuYD3UnqQc1mG
        fbEAPh3olT4w9JZq5pQ0UCecZaSpToq9PSNMSaiqSP9SoH7szdVgAwMys2FX3dcZUjy8PHphQvlU
        gkbhCP6ffZ013kerBwr/NIExSF6QFWpjNKWrzT1vRD9tA01arz7xUv3Gt5SG+oGSMJOrr8mLdCx0
        6TUnzb1QU7paDkYIgMnASBKa/2aIWLYXL2wwpNjfwNpVnHeJImCdrs1cNecNGGTYCd5HuiRhkWNX
        ltfktLgasCrIbaLf1D16AypDZj//DViIhgYGtSrwwo76bX9iAAM=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7c982044dc3f96f5-SJC
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - br
      Content-Type:
      - application/json
      Date:
      - Fri, 19 May 2023 00:12:18 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0301
      openai-organization:
      - user-38re46gevxtz9n69wynp7uzp
      openai-processing-ms:
      - '15799'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86487'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.342s
      x-request-id:
      - 3219ad96b87eb0a830a5ba5ffa5a4649
    status:
      code: 200
      message: OK
version: 1
