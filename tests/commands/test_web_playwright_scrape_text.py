# Date: 2023-5-13
# Author: Generated by GoCodeo.


import unittest
from unittest.mock import patch
from bs4 import BeautifulSoup
from playwright.sync_api import sync_playwright
from autogpt.commands.web_playwright import scrape_text
patch_func1 = "autogpt.commands.web_playwright.sync_playwright"

class TestScrapeText(unittest.TestCase):

    @patch(patch_func1)
    def test_positive_scrape_text(self, mock_sync_playwright):
        mock_sync_playwright.return_value.__enter__.return_value.chromium.launch.return_value.new_page.return_value.content.return_value = """
        <html>
            <head>
                <title>Test Page</title>
            </head>
            <body>
                <h1>Hello, World!</h1>
                <p>This is a test page.</p>
            </body>
        </html>
        """
        url = "https://example.com"
        expected_text = 'Test Page\nHello, World!\nThis is a test page.'
        self.assertEqual(scrape_text(url), expected_text)

    @patch(patch_func1)
    def test_negative_scrape_text(self, mock_sync_playwright):
        mock_sync_playwright.return_value.__enter__.return_value.chromium.launch.return_value.new_page.return_value.goto.side_effect = Exception("Error")
        url = "https://invalid-url.com"
        expected_text = "Error: Error"
        self.assertEqual(scrape_text(url), expected_text)

    @patch(patch_func1)
    def test_edge_empty_page(self, mock_sync_playwright):
        mock_sync_playwright.return_value.__enter__.return_value.chromium.launch.return_value.new_page.return_value.content.return_value = "<html></html>"
        url = "https://empty-page.com"
        expected_text = ""
        self.assertEqual(scrape_text(url), expected_text)

    @patch(patch_func1)
    def test_edge_only_script_and_style(self, mock_sync_playwright):
        mock_sync_playwright.return_value.__enter__.return_value.chromium.launch.return_value.new_page.return_value.content.return_value = """
        <html>
            <head>
                <script>console.log("Test");</script>
                <style>body { background-color: red; }</style>
            </head>
            <body>
                <script>console.log("Another test");</script>
            </body>
        </html>
        """
        url = "https://script-style-only.com"
        expected_text = ""
        self.assertEqual(scrape_text(url), expected_text)

if __name__ == "__main__":
    unittest.main()
