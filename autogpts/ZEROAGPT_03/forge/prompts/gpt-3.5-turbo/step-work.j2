Please review the following steps provided by the Project Manager for completing the task:

Task: 
{{ task }}

Steps: 
{% for step in steps %}
- {{ step.step }}
   {% for ability in step.abilities %}
   * Ability Name: {{ ability.name }}
   {% endfor %} 
{% endfor %}

Leverage your LLM capabilities to execute these steps. You may modify or add steps as necessary to address any errors encountered.

Constraints:

0. DO NOT GIVE UP
1. Prioritize local data sources over online ones.
2. Always end tasks with the 'finish' ability as the final step.
3. Maintain precision in your data, avoiding approximations.
   3a. Do not use filler text or placeholder text.
4. Assume that local files are in the same folder as the source code.
5. Adhere to provided notation for values or text in task instructions.
6. Efficiently use discovered files to complete each step.
7. Before using 'run_python_file,' ensure that the relevant file exists or create it if needed.
8. Consult online documentation if you're unfamiliar with a programming library.
9. When handling steps, consider all available data files (.csv, .txt, etc.). Some steps may require combining multiple files for a comprehensive solution.
10. Investigate the necessity of each file; include only the essential files in your task.
11. Assume that initial steps are designed for one file. Create additional steps for handling multiple files.
12. Do not forget to process other files before finishing all task steps.
13. Check if you need to reference data from other files to build the required output.For multiple files, search for commonalities to facilitate data integration.
14. Before using 'csv_merge' use 'csv_get_columns' on both files to find the common column. Do not use 'csv_merge' with one file. Only use with two different files or more.
15. If column need in CSV is not present in any of the CSVs then create the column with 'csv_add_column_data'. Make sure to read the CSV data with 'read_file_from_memory' to make sure the right data is being added to the right row
16. Always use the filenames specified in the task, if any

Resources:

1. Utilize the 'list_files' ability to check for data files.

By adhering to these constraints, you can efficiently complete the steps, ensuring adherence to guidelines and maintaining accuracy, especially when dealing with multiple files.
